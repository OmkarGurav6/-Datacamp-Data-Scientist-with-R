
R markdown us a tool used to crate efficient reports to summarize analyses and 
communicate results to an audience.

R markdown is a way to ensure that the results are reproducible.

R markdown has 3 components : code , text and metadata

Knitting a file is how we generate an output file from the R markdown file.

A code chunk is a section that contains the code that will either render output in the report or
display the code itself as part of the report.

code chunk start and end with ```.
```{r}
```

# Header1
## Header2

Remember to place the hash at the start of the line and add a single space after the last hash before the text.

As number of hash increase size of text decrease. eg: size of text with 2 hash > size of text with 3 hash

If we want to include text within the code, we add a single hash before the text.

To bold the text, we surround it with 2 sets of * or _. eg: **bold** or _ _bold_ _

To italicize it, use 1 set of * or _. eg: *italics* or _italics_

To strikethrough the text, surround it with 2 sets of ~. eg : ~~strikethrough~~

We can add inline code to text to clarify that we are referring to object names from the code.
Use single set of `. eg : `company`

Link text in [] followed by link in () eg : [Google](www.google.com)

Images are added similarly except we place ! in front of the [].
eg : ![](imagelink)

Image can be either local file or image from web.

YAML header contains metadata of the file as key-value pairs that correspond to information about the document.

It starts and end with ---. 
eg: ---
    title: "Abcdd" 
    author: "Acv"
    ---

When we create R markdown document, by default, it includes title, author and output format.

Title and author are provided as strings.

"`r Sys.Date()`" is used to add date automatically. Date in format of Y-M-D appears after knitting document.

We can format date. eg : "`r format(Sys.time(), '%d %B %Y')`"


We can label code chunk like ```{r codechunkname}
                              code                              
                             ```
                      
To refer value of certain object in text use `r objectname`.

We can specify plot dimensions using fig.width and fig.height . eg : ```{r codechunkname , fig.width = 5, fig.height = 3}
Alternatively we can specify these dimensions like fig.dim = c(5,3)

out.width and out.height determine dimensions of the output of images in document and specified in %.
eg : out.width = '50%' or "50%"

fig.align has 3 values left, right and center.

```{r setup, include = FALSE}
knitr::opts_chunk$set(fig.align = 'center', out.width = '80%', echo = TRUE)
```
This will apply all changes globally.


Bulleted list can be added using *, - or +
eg : - Region
       - East Asia
       - Europe

Numbered list can be created using numbers with . before each item on the list.

We can add table using kable(dataset) from knitr package,
knitr package runs each code chunk and knits the document.

Default alignment for columns is right for numeric and left for all others.
align can be l, r or c.

The include option determines whether or not the code and results appear in the report.
The default to include is TRUE.

When echo option is set to FALSE, it prevents the code from appearing in the knit file, but displays the results of the code.
We can use this option for plot.
The default to echo is TRUE.

The eval option specifies whether or not we want to evaluate the code in a code chunk.

collapse : If TRUE, knitr will collapse all the source and output blocks created by the chunk into a single block.
default value is FALSE.

warning default TRUE
error default FALSE If FALSE, knitr will not display any error messages generated by the code
message default TRUE


The file won't knit unless the correct indentation is used in the YAML header.

Table of contents(toc) is added in output format of YAML header.
eg : output:
       html_document:
       toc: true
  
toc_depth specify which headers will appear in the toc.
By default depth is 3 for html doc and 2 for pdf doc.

If we include number sections and want the decimal numbering to start with 1, the largest headers in 
report should use 1 hash.
If largest header start with 2 hashes section numbering will start with 0. 

for only HTML doc toc_float is used.

When toc_float = TRUE , toc will apear on the left side of doc and will remain visible while reader scrolls
through doc.
Collapsed and smooth_scroll options are nested within toc_float field.
eg : toc_float:
       collapsed: false

collapsed and smooth_scroll by default TRUE.

collapsed controls whether the TOC appears with only the top-level (e.g., H2) headers. 
If collapsed initially, the TOC is automatically expanded inline when necessary.

smooth_scroll controls whether page scrolls are animated when TOC items are navigated to via mouse clicks.

We can add parameters in YAML header and refer them using params$parametername
eg: params: 
      country: USA

For style we refer to table of content using #TOC,header using #header and code chunk using pre.
output: 
  html_document:
    css: styles.css











